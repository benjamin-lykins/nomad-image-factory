- name: Ensure unzip is installed
  ansible.builtin.apt:
    name: unzip
    state: present
    update_cache: yes

- name: Download HashiCorp Nomad v.{{ nomad_version }}
  ansible.builtin.get_url:
    url: "https://releases.hashicorp.com/nomad/{{ nomad_version }}/nomad_{{ nomad_version }}_linux_amd64.zip"
    dest: "/tmp/nomad_{{ nomad_version }}_linux_amd64.zip"
  vars:
    nomad_version: "1.8.3"

- name: Unzip HashiCorp v.{{ nomad_version }}
  ansible.builtin.unarchive:
    src: "/tmp/nomad_{{ nomad_version }}_linux_amd64.zip"
    dest: "/usr/local/bin"
    remote_src: yes
  vars:
    nomad_version: "1.8.3"

- name: Set Permissions on HashiCorp Nomad
  ansible.builtin.file:
    path: "/usr/local/bin/nomad"
    owner: root
    group: root
    mode: "0755"

- name: Create Nomad Data Directory
  ansible.builtin.file:
    path: "/opt/nomad"
    state: directory

- name: Create Nomad Configuration Directory
  ansible.builtin.file:
    path: "/etc/nomad.d"
    state: directory
    mode: "0700"

- name: Create Nomad Non-Privileged User - Server
  ansible.builtin.user:
    name: nomad
    home: /etc/nomad.d
    shell: /bin/false
    system: yes
  when: "'server' in nomad_role"

- name: Create Nomad Systemd Service - Server
  ansible.builtin.template:
    src: "server-nomad.service.j2"
    dest: "/etc/systemd/system/nomad.service"
  when: "'server' in nomad_role"

- name: Create Nomad Systemd Service - Client and Shared
  ansible.builtin.template:
    src: "client-nomad.service.j2"
    dest: "/etc/systemd/system/nomad.service"
  when: "'server' not in nomad_role"

- name: Determine architecture
  set_fact:
    arch_cni: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"

- name: Set CNI plugin version
  set_fact:
    cni_plugin_version: "v1.5.1"

- name: Download CNI plugins
  ansible.builtin.get_url:
    url: "https://github.com/containernetworking/plugins/releases/download/{{ cni_plugin_version }}/cni-plugins-linux-{{ arch_cni }}-{{ cni_plugin_version }}.tgz"
    dest: "/tmp/cni-plugins.tgz"

- name: Create CNI bin directory
  ansible.builtin.file:
    path: /opt/cni/bin
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Extract CNI plugins
  ansible.builtin.unarchive:
    src: /tmp/cni-plugins.tgz
    dest: /opt/cni/bin
    remote_src: true
